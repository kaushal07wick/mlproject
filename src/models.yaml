models:
  Random Forest:
    model: "RandomForestRegressor"
    params:
      n_estimators: [8, 16, 32, 64, 128, 256]
  Decision Tree:
    model: "DecisionTreeRegressor"
    params:
      criterion: ['squared_error', 'friedman_mse', 'absolute_error', 'poisson']
  Gradient Boosting:
    model: "GradientBoostingRegressor"
    params:
      learning_rate: [0.1, 0.01, 0.05, 0.001]
      subsample: [0.6, 0.7, 0.75, 0.8, 0.85, 0.9]
      n_estimators: [8, 16, 32, 64, 128, 256]
  Linear Regression:
    model: "LinearRegression"
    params: {}
  XGBRegressor:
    model: "XGBRegressor"
    params:
      learning_rate: [0.1, 0.01, 0.05, 0.001]
      n_estimators: [8, 16, 32, 64, 128, 256]
  CatBoosting Regressor:
    model: "CatBoostRegressor"
    params:
      depth: [6, 8, 10]
      learning_rate: [0.01, 0.05, 0.1]
      iterations: [30, 50, 100]
  AdaBoost Regressor:
    model: "AdaBoostRegressor"
    params:
      learning_rate: [0.1, 0.01, 0.5, 0.001]
      n_estimators: [8, 16, 32, 64, 128, 256]
